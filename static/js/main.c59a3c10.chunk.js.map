{"version":3,"sources":["Navigation.js","Components/PlaneAnimation.js","BodyPages/Home.js","BodyPages/About.js","Components/NearestLoading.js","Components/NearestError.js","Components/Map.js","Components/PlaneInformation.js","BodyPages/Nearest.js","BodyPages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","Navbar","bg","variant","style","zIndex","Container","fluid","Brand","to","as","Link","className","Provider","value","size","marginRight","Nav","defaultActiveKey","window","location","pathname","href","React","Component","PlaneAnimation","planes","Array","keys","map","i","document","querySelectorAll","forEach","plane","idx","setTimeout","animatePlane","initWall","destWall","wallVals","l","r","t","b","Error","console","warn","walls","coords","buffer","c","Math","floor","random","initWallIdx","destWallIdx","this","genPlanePath","deltaX","dest","init","innerWidth","deltaY","innerHeight","rotation","atan","PI","formatCoord","coord","animate","transform","duration","iterations","composite","onfinish","Home","Row","About","overflowY","maxWidth","NearestLoading","NearestError","props","error","retry","Map","state","markers","loaded","bootstrapURLKeys","key","process","center","lat","lng","defaultZoom","height","width","position","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","mapLoaded","setState","buildMapMarkers","prevProps","markerSize","newMarkers","push","latitude","longitude","track","true_track","IconMarker","label","icon","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","LocationMarker","PlaneMarker","rowIdentity","icao24","tip","callsign","squawk","rowCountry","origin_country","rowPosition","rowOther","spi","sensors","position_source","layoutGround","on_ground","last_contact","layoutAir","baro_altitude","geo_altitude","vertical_rate","velocity","InformationLabel","PlaneInformation","log","date","Date","toLocaleString","layout","row","Object","String","Nearest","nearest","retryError","locationSuccess","bind","requestGeolocation","navigator","geolocation","getCurrentPosition","err","fetchRetry","n","fetch","then","response","json","data","catch","NotFound","App","hashType","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c59a3c10.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Navbar, Nav } from 'react-bootstrap';\r\nimport { IconContext } from 'react-icons';\r\nimport { FaPlane } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Navigation extends React.Component {\r\n    render() {\r\n        return (\r\n        <Navbar bg=\"white\" variant=\"light\" style={{zIndex: 1}}>\r\n            <Container fluid>\r\n                <Navbar.Brand to=\"/\" as={Link} className=\"d-flex align-items-center\">\r\n                    <IconContext.Provider value={{className: 'text-primary', size: '30', style: {marginRight: \"5px\"}}}>\r\n                        <FaPlane />\r\n                    </IconContext.Provider>\r\n                    <b>Nearest Plane</b>\r\n                </Navbar.Brand>\r\n                <Nav className=\"me-auto\" defaultActiveKey={window.location.pathname}>\r\n                    <Nav.Link href=\"/\" to=\"/\" as={Link}>Home</Nav.Link>\r\n                    <Nav.Link href=\"/nearest\" to=\"/nearest\" as={Link}>Nearest</Nav.Link>\r\n                    <Nav.Link href=\"/about\" to=\"/about\" as={Link}>About</Nav.Link>\r\n                </Nav>\r\n            </Container>\r\n        </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { FaPlane } from 'react-icons/fa';\r\nimport './PlaneAnimation.css';\r\n\r\n\r\n\r\nclass PlaneAnimation extends React.Component {\r\n    render () {       \r\n        const planes = [...Array(10).keys()].map(i => <FaPlane className=\"plane\" key={i}/>);\r\n        return (\r\n            <ul className=\"planeContainer\">\r\n                {planes}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    \r\n    componentDidMount () {\r\n        // Animate plane objects\r\n        document.querySelectorAll('.plane').forEach((plane, idx) => {\r\n            setTimeout(() => {\r\n                this.animatePlane(plane);\r\n            }, idx*500);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Generate animation coordinates based on specified walls\r\n     * @param {Object} initWall Wall (l,r,t,b) plane will enter the screen from\r\n     * @param {String} destWall Wall (l,r,t,b) plane will exit the screen through \r\n     * @returns {Object} Coordinates object of form {'init': [left, top], 'dest': [left, top]}\r\n     */\r\n    genPlanePath (initWall, destWall)  {\r\n        const wallVals = {\r\n            l: 0,\r\n            r: 1,\r\n            t: 2,\r\n            b: 3\r\n        }\r\n\r\n        if (!(initWall in wallVals) || !(destWall in wallVals)) {\r\n            // Invalid wall provided\r\n            throw new Error(`initWall and destWall must be one of ['l', 'r', 't', 'b']. Given '${initWall}' and '${destWall}'`);\r\n        }\r\n        \r\n        if (initWall === destWall) {\r\n            // Identical walls provided\r\n            console.warn(`genPlanePath: Generating a path between the same wall '${initWall}'`);\r\n        }\r\n\r\n        const walls = {\r\n            'init': wallVals[initWall],\r\n            'dest': wallVals[destWall]\r\n        }\r\n        const coords = {\r\n            'init': [0,0],\r\n            'dest': [1,1]\r\n        }\r\n        // Coordinate buffer to prevent small corner flights\r\n        const buffer = {\r\n            'init': 0,\r\n            'dest': 30\r\n        }\r\n        // Populate coordinates\r\n        for (let c in coords) {\r\n            if (walls[c] < 2) {\r\n                // Left/Right wall\r\n                coords[c][0] = (walls[c]%2) ? 110 : 0;\r\n                coords[c][1] = buffer[c] + Math.floor(Math.random() * (100-buffer[c]));\r\n            } else {\r\n                // Top/Bottom wall\r\n                coords[c][0] = buffer[c] + Math.floor(Math.random() * (100-buffer[c]));\r\n                coords[c][1] = (walls[c]%2) ? 110 : 0;\r\n            }\r\n        }\r\n\r\n        return coords;        \r\n    }\r\n\r\n    /**\r\n     * Generate animation for a particular plane\r\n     * @param {Object} plane DOM plane element to animate\r\n     */\r\n    animatePlane (plane) {\r\n        const walls = ['l', 'r', 't', 'b']\r\n\r\n        // Determine initial and destination walls\r\n        const initWallIdx = Math.floor(Math.random() * 4);\r\n        const destWallIdx = (initWallIdx + 1+Math.floor(Math.random() * 3)) % 4;\r\n        \r\n        // Determine path coordinates\r\n        const coords = this.genPlanePath(walls[initWallIdx], walls[destWallIdx]);\r\n\r\n        // Determine path rotation angle\r\n        const deltaX = (coords.dest[0] - coords.init[0]) * window.innerWidth;\r\n        const deltaY = (coords.dest[1] - coords.init[1]) * window.innerHeight;\r\n        \r\n        let rotation = Math.floor(Math.atan(deltaY/deltaX) * 180/Math.PI);\r\n        if (deltaX < 0) rotation += 180;\r\n\r\n        // Create animation\r\n        const formatCoord = (coord) => `${coord[0]}vw, ${coord[1]}vh`\r\n        const animation = plane.animate([\r\n            {transform: `translate(${formatCoord(coords.init)}) rotate(${rotation}deg)`},\r\n            {transform: `translate(${formatCoord(coords.dest)}) rotate(${rotation}deg)`}\r\n        ], {\r\n            duration: 5000,\r\n            iterations: 1,\r\n            composite: 'replace'\r\n        });\r\n\r\n        // Recursively reanimate plane each iteration.\r\n        // Enables random generation of pane paths.\r\n        animation.onfinish = () => this.animatePlane(plane);\r\n    }\r\n}\r\n\r\nexport default PlaneAnimation;","import React from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { BsExclamationCircle } from 'react-icons/bs';\r\n\r\nimport PlaneAnimation from '../Components/PlaneAnimation';\r\n\r\nclass Home extends React.Component {\r\n    render () {\r\n        return (\r\n        <Container fluid className=\"h-100 d-flex align-items-center\">\r\n            <Row className=\"w-100 mx-0\" style={{zIndex: 1}}>\r\n                <Row className=\"align-items-center mx-0\">\r\n                    <h4 className=\"text-center fs-1\">Welcome to Nearest Plane</h4>\r\n                    <p className=\"w-100 text-center m-auto mb-5 fs-4\">\r\n                        Discover the world of airplanes flying right over your head\r\n                    </p>\r\n                </Row>\r\n                <Row className=\"mt-3 mx-0\">\r\n                    <Link to=\"/nearest\" className=\"btn btn-primary w-50 m-auto btn-lg text-white\">\r\n                        Find your Nearest Plane\r\n                    </Link>\r\n                    <Container fluid className=\"d-flex align-items-center justify-content-center\">\r\n                        <IconContext.Provider value={{className:'fw-light', size: 15, style:{marginRight: '3px'}}}>\r\n                            \r\n                            <BsExclamationCircle />\r\n                        </IconContext.Provider>\r\n                        <span className=\"fw-light fs-6\">\r\n                            Location access required\r\n                        </span>\r\n                    </Container>\r\n                </Row>\r\n\r\n            </Row>\r\n            <PlaneAnimation />\r\n        </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nimport { Container } from 'react-bootstrap'\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container fluid style={{overflowY: 'auto', maxWidth: '900px'}}>\r\n                <h4 className=\"mt-4\">What does Nearest Plane do?</h4>\r\n                <p>\r\n                    Nearest Plane gives you real-time information about the plane that is closest to your current location. \r\n                </p>\r\n\r\n                <h4 className=\"mt-4\">How does Nearest Plane work?</h4>\r\n                <p>\r\n                    Nearest Plane uses a combination of your browser's current location \r\n                    and the <a href=\"https://https://opensky-network.org/\">OpenSky Network</a> to\r\n                    find the plane that is closest to you at any given moment. \r\n                </p>\r\n                <p>\r\n                    In more technical terms, the React front-end (that you're looking at right now) sends a request with your location\r\n                    to a Node.js back-end server. That Node.js server then validates the request from the front-end\r\n                    and makes a request to the OpenSky API asking for information about aircraft in your area. Once the\r\n                    Node.js server gets a response back from OpenSky, it packages determines the closest plane to your location, repackages that plane's information, and sends it on to the React front-end\r\n                    where it can be interepreted and displayed for you to enjoy. If you still want to learn more, check out\r\n                    the <a href=\"https://github.com/s-fitch/nearest-plane\">Nearest Plane GitHub</a>.\r\n                </p>\r\n\r\n                <h4 className=\"mt-4\">Who made Nearest Plane?</h4>\r\n                <p>\r\n                    I did! If you want to learn more about me, you can check out my website: <a href='https://www.spencerfitch.com'>spencerfitch.com</a>.\r\n                </p>\r\n\r\n                <h4 className=\"mt-4\">Why did you make Nearest Plane?</h4>\r\n                <p>\r\n                    I often found myself looking up at the planes passing by in the sky above my head and wondering what stories they had to tell. My goal in creating Nearest Plane was to provide a quick, intuitive platform for hearing these storiees and learning a little more about the planes that fly above our heads every day.\r\n                </p>\r\n                \r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default About;","import React from 'react';\r\nimport { Container,Row } from 'react-bootstrap';\r\nimport { FaPlane } from 'react-icons/fa';\r\n\r\nimport './NearestLoading.css'\r\n\r\nclass NearestLoading extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"h-100 d-flex align-items-center\">\r\n                <Row className=\"w-100\">\r\n                    <div className=\"planePath\">\r\n                        <FaPlane className=\"planeLoading\"/>\r\n                    </div>\r\n                    <h4 className='text-center mt-2'>\r\n                        Locating nearest plane...\r\n                    </h4>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NearestLoading;","import React from 'react';\r\nimport { Container } from 'react-bootstrap'\r\n\r\nimport { IconContext } from 'react-icons';\r\nimport { BiErrorAlt } from 'react-icons/bi';\r\n\r\nclass NearestError extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"h-100 d-flex flex-column justify-content-center\">\r\n                <Container fluid className=\"d-flex align-items-center justify-content-center mb-2\">\r\n                    <IconContext.Provider value={{className:'text-primary', size: '40', style:{marginRight: '5px'}}}>\r\n                        <BiErrorAlt/>\r\n                    </IconContext.Provider>\r\n                    <span className=\"fw-bold fs-4 \">\r\n                        Uh-oh, this is an error\r\n                    </span>\r\n                </Container>\r\n                <p className=\"text-center\">\r\n                    {this.props.error}\r\n                </p>\r\n                {(this.props.retry) ? <a href='/nearest' className='btn btn-primary text-white w-25 mx-auto'>Retry</a> : null}\r\n                \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NearestError;","import React from 'react';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { IoLocationSharp } from 'react-icons/io5';\r\nimport { FaPlane } from 'react-icons/fa';\r\n\r\n\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            markers: [],\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <GoogleMapReact \r\n            bootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY}}\r\n            center={{lat: this.props.lat, lng: this.props.lng}}\r\n            defaultZoom={10}\r\n            style={{ height: \"100%\", width: \"100%\", position: 'relative'}}\r\n            yesIWantToUseGoogleMapApiInternals\r\n            onGoogleApiLoaded={({map, maps}) => this.mapLoaded(map, maps)}\r\n        >        \r\n            {(this.state.loaded) ? this.state.markers : null}\r\n        </GoogleMapReact>\r\n        )\r\n    }\r\n\r\n    mapLoaded(map, maps) {\r\n        this.setState({\r\n            markers: this.buildMapMarkers(),\r\n            loaded: true\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if ((this.props.lat === prevProps.lat) &&\r\n            (this.props.lng === prevProps.lng) &&\r\n            (this.props.plane === prevProps.plane)) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            markers: this.buildMapMarkers()\r\n        });\r\n    }\r\n\r\n    buildMapMarkers() {\r\n        const markerSize = '2.25em';\r\n        const newMarkers = [];\r\n\r\n        newMarkers.push(\r\n            <LocationMarker\r\n                size={markerSize}\r\n                lat={this.props.lat}\r\n                lng={this.props.lng}\r\n                key={0}\r\n            />\r\n            )\r\n        if (this.props.plane) {\r\n            newMarkers.push(\r\n                <PlaneMarker\r\n                    size={markerSize}\r\n                    lat={this.props.plane.latitude} \r\n                    lng={this.props.plane.longitude}\r\n                    track={this.props.plane.true_track}\r\n                    key={1}\r\n                />\r\n            )\r\n        }\r\n\r\n        \r\n        \r\n        return newMarkers;\r\n    }\r\n\r\n}\r\n\r\n\r\nconst IconMarker = ({ size, label, icon, transform }) => (\r\n    <div\r\n        style={{\r\n            width: (size) ? size : '1em',\r\n            height: (size) ? size : '1em',\r\n            transform: (transform) ? transform : 'translate(-50%, -50%)'\r\n        }}\r\n    >\r\n        <OverlayTrigger\r\n            placement='right'\r\n            delay={{ show: 150, hide: 300 }}\r\n            overlay={ <Tooltip>{label}</Tooltip>}\r\n        >\r\n            {icon}\r\n        </OverlayTrigger>\r\n    </div>\r\n)\r\n\r\nconst LocationMarker = ({ size }) => (\r\n    <IconMarker\r\n        label='Your Location'\r\n        icon={\r\n            <IoLocationSharp\r\n                className='text-primary'\r\n                size={size}\r\n            />\r\n        }\r\n        size={size}\r\n        transform='translate(-50%, -95%)'\r\n    />\r\n)\r\n\r\nconst PlaneMarker = ({ size, track }) => (\r\n    <IconMarker \r\n        label='Nearest Plane'\r\n        icon={\r\n            <FaPlane\r\n                className='text-primary'\r\n                size={size}\r\n                style={{transform: `rotate(${track-90}deg)`}}\r\n            />\r\n        }\r\n        size={size}\r\n        transform='translate(-50%, -50%)'\r\n    />\r\n)\r\n\r\n\r\nexport default Map;","import React from 'react';\r\n\r\nimport { Container, OverlayTrigger, Tooltip} from 'react-bootstrap';\r\n\r\n\r\n\r\nconst rowIdentity = {\r\n    icao24: {\r\n        label: \"ICAO 24\",\r\n        tip: \"Unique ICAO 24-bit address of the transponder in hex string representation\",\r\n    },\r\n    callsign: {\r\n        label: \"Callsign\",\r\n        tip: \"Callsign of the vehicle (8 chars)\"\r\n    },\r\n    squawk: {\r\n        label: \"Squawk\",\r\n        tip: \"Assigned by air traffic controllers to identify a vehicle over radio\"\r\n    },\r\n}\r\nconst rowCountry = {\r\n    origin_country: {\r\n        label: \"Origin Country\",\r\n        tip: \"Country name inferred from the ICAO 24-bit address\"\r\n    },\r\n}\r\nconst rowPosition = {\r\n    longitude: {\r\n        label: \"Longitude (°)\",\r\n        tip: \"WGS-84 longitude in degrees\"\r\n    },\r\n    latitude: {\r\n        label: \"Latitude (°)\",\r\n        tip: \"WGS-84 latitude in degrees\",\r\n    },\r\n}\r\nconst rowGround = {\r\n    on_ground: {\r\n        label: \"On Ground\",\r\n        tip: \"Whether the vehicle is currently on the ground\",\r\n    },\r\n    last_contact: {\r\n        label: \"Last Contact\",\r\n        tip: \"Timestamp of last contact from vehicle transponder\",\r\n    },\r\n}\r\nconst rowVertMovement = {\r\n    baro_altitude: {\r\n        label: \"Barometric Altitude (m)\",\r\n        tip: \"Determined by measuring surrounding atmospheric pressure\",\r\n    },\r\n    geo_altitude: {\r\n        label: \"Geometric Altitude (m)\",\r\n        tip: \"Determined using specialized electronic equipment like GPS\"\r\n    },\r\n    vertical_rate: {\r\n        label: \"Vertical Rate (m/s)\",\r\n        tip: \"Positive value indicaes that the vehicle is climbing, while a negative value indicates that it is descending\",\r\n    },\r\n}\r\nconst rowHorzMovement = {\r\n    velocity: {\r\n        label: \"Velocity (m/s)\",\r\n        tip: \"Velocity relative to the ground\",\r\n    },\r\n    true_track: {\r\n        label: \"True Track\",\r\n        tip: \"Degrees from North of vehicle's current heading\",\r\n    },\r\n}\r\nconst rowContact = {\r\n    // time_position: {\r\n    //     label: \"Last Position Update\",\r\n    //     tip: \"Timestamp of last position update from vehicle\",\r\n    // },\r\n    last_contact: {\r\n        label: \"Last Contact\",\r\n        tip: \"Timestamp of last contact from vehicle transponder\",\r\n    },\r\n}\r\nconst rowOther = {\r\n    spi: {\r\n        label: \"Special Purpose\",\r\n        tip: \"Whether flight status is marked with a special prupose indicator\",\r\n    },\r\n    sensors: {\r\n        label: \"Sensors\",\r\n        tip: \"IDs of receivers which were used to gather vehicle information\",\r\n    },\r\n    position_source: {\r\n        label: \"Position Source\",\r\n        tip: \"System used to determine vehicle's position\"\r\n    }\r\n}\r\n\r\n// Distinct layouts to reduce reduntant information when plane on ground\r\nconst layoutGround = [rowIdentity, rowCountry, rowPosition, rowGround, rowOther];\r\nconst layoutAir = [rowIdentity, rowCountry, rowPosition, rowVertMovement, rowHorzMovement, rowContact, rowOther];\r\n\r\nfunction InformationLabel(props) {\r\n    return (\r\n    <span className=\"d-inline-flex align-items-center\">\r\n        <OverlayTrigger\r\n            placement=\"bottom\"\r\n            delay={{ show: 250, hide: 400 }}\r\n            overlay={<Tooltip>{props.tip}</Tooltip>}\r\n        >  \r\n            <div className='fw-light'>{props.label}</div>\r\n        </OverlayTrigger>\r\n    </span>\r\n    )\r\n}\r\n\r\nclass PlaneInformation extends React.Component {\r\n    render() {\r\n        let plane = this.props.plane;\r\n        if (plane.last_contact) {\r\n            console.log(plane.last_contact)\r\n            const date = new Date(plane.last_contact*1000);\r\n            plane.last_contact = date.toLocaleString()\r\n        }\r\n        let layout = (plane.on_ground) ? layoutGround : layoutAir;\r\n        \r\n        return (\r\n            <Container fluid className='m-0 p-0'>\r\n                <div className=\"text-center display-6 mt-1\">Plane Information</div>\r\n                <hr className=\"mx-auto mb-2 mt-0 w-75\" style={{height: '2px'}}/>\r\n                {layout.map(row => {\r\n                    return (\r\n                    <Container fluid className='m-0 mt-2 p-0 d-flex justify-content-center'>\r\n                        {Object.keys(row).map(key => {\r\n                            if (!plane[key]) return null;\r\n                            return (\r\n                            <Container key={key} className='m-0 p-1 text-center'>\r\n                                <div className='display-6 fs-2'>\r\n                                    {String(plane[key])}\r\n                                </div>\r\n                                <InformationLabel\r\n                                    label={row[key].label}\r\n                                    tip={row[key].tip} />\r\n                            </Container>\r\n                            )})}\r\n                    </Container>\r\n                    )\r\n                })}\r\n            </Container>    \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default PlaneInformation;","import React from 'react';\r\n\r\nimport NearestLoading from '../Components/NearestLoading';\r\nimport NearestError from '../Components/NearestError';\r\nimport Map from '../Components/Map';\r\nimport PlaneInformation from '../Components/PlaneInformation';\r\n\r\nimport './Nearest.css';\r\n\r\n\r\n//const baseUrl = \"http://localhost:8081/api\"\r\nconst baseUrl = 'https://nearest-plane.herokuapp.com/api'\r\n\r\nclass Nearest extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            lat: null,\r\n            lng: null,\r\n            nearest: null,\r\n            error: null,\r\n            retryError: false\r\n        };\r\n\r\n        this.locationSuccess = this.locationSuccess.bind(this);\r\n    }\r\n    render () {\r\n        if (this.state.error) return (<NearestError error={this.state.error} retry={this.state.retryError}/>);\r\n        if (!this.state.nearest) return (<NearestLoading />);\r\n\r\n        return (\r\n        <div className=\"bg-light nearestContainer\">\r\n            <div className=\"nearestMap\">\r\n                <Map \r\n                    lat={this.state.lat}\r\n                    lng={this.state.lng}\r\n                    plane={this.state.nearest}/>\r\n            </div>\r\n            <PlaneInformation\r\n                plane={this.state.nearest} />\r\n        </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.requestGeolocation()\r\n    }\r\n\r\n    requestGeolocation() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(this.locationSuccess, \r\n                (err) => {\r\n                    console.log(err);\r\n                    this.setState({\r\n                        error: (<span>We encountered an unexpected error when retreiving your location.<br/><span className='fw-light'>Trying again might fix the issue.</span></span>),\r\n                        retryError: true\r\n\r\n                    })\r\n                });\r\n        } else {\r\n            this.setState({\r\n                error: <span>Geolocation is not supported by this browser.<br/>Please update your browser settings or use a different browser in order to use Nearest Plane.</span>,\r\n                retry: false\r\n            })\r\n        }\r\n    }\r\n\r\n    locationSuccess (position) {\r\n        this.fetchRetry(position, 0);\r\n    }\r\n\r\n    fetchRetry (position, n) {\r\n        console.log(`Try ${n}`);\r\n        // Maximum of 3 retry attempts for single request\r\n        if (n >= 3) {\r\n            this.setState({\r\n                error: (<span>We weren't able to retrieve the plane information from our servers.<br/><span className=\"fw-light\">Trying again might fix the issue.</span></span>),\r\n                retryError: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        fetch(`${baseUrl}/nearest?lat=${position.coords.latitude}&lon=${position.coords.longitude}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    error: null,\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude,\r\n                    nearest: data\r\n                })\r\n            })\r\n            .catch(err => this.fetchRetry(position, n+1))\r\n    }\r\n}\r\n\r\nexport default Nearest;","import React from 'react';\r\nimport {Container} from 'react-bootstrap'\r\n\r\nimport { IconContext } from 'react-icons';\r\nimport {BiErrorAlt} from 'react-icons/bi';\r\n\r\nclass NotFound extends React.Component {\r\n    render () {\r\n        return (\r\n            <Container fluid className=\"h-100 d-flex flex-column justify-content-center\">\r\n                <Container fluid className=\"d-flex align-items-center justify-content-center mb-2\">\r\n                    <IconContext.Provider value={{className:'text-primary', size: '40', style:{marginRight: '5px'}}}>\r\n                        <BiErrorAlt/>\r\n                    </IconContext.Provider>\r\n                    <span className=\"fw-bold fs-4 \">\r\n                        This page isn't what you're looking for.\r\n                    </span>\r\n                </Container>\r\n                <p className=\"text-center\">\r\n                    We can't find \"{window.location.pathname}\" on this website. <span className=\"fw-light\">That's all we know.</span>\r\n                    <br/>\r\n                    Use the navigation bar above to go to one of our other pages.\r\n                </p>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default NotFound;","import React from 'react';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport Navigation from './Navigation';\nimport Home from './BodyPages/Home';\nimport About from './BodyPages/About';\nimport Nearest from './BodyPages/Nearest';\nimport NotFound from './BodyPages/NotFound';\n\nclass App extends React.Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            \"lat\": null,\n            \"lon\": null,\n            \"nearest\": null\n        }\n    }\n\n    render () {\n        return (\n            <Router hashType=\"slash\">\n                <div className=\"vh-100 d-flex flex-column bg-light\">\n                    <Navigation />\n\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Home />\n                        </Route>\n                        <Route path=\"/nearest\">\n                            <Nearest />\n                        </Route>\n                        <Route path=\"/about\">\n                            <About />\n                        </Route>\n                        <Route path=\"*\">\n                            <NotFound />\n                        </Route>\n                    </Switch>\n\n                </div>\n            </Router>\n            \n        )\n    }\n    \n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom_bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}