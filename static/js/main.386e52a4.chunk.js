(this.webpackJsonpclient=this.webpackJsonpclient||[]).push([[0],{55:function(e,t,n){},67:function(e,t,n){},68:function(e,t,n){},70:function(e,t,n){},71:function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),s=n(14),i=n.n(s),c=(n(55),n(9)),o=n(10),l=n(12),h=n(11),u=n(21),d=n(13),j=n(81),b=n(76),m=n(80),f=n(0),p=n(23),O=n(2),x=function(e){Object(l.a)(n,e);var t=Object(h.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"render",value:function(){return Object(O.jsx)(j.a,{bg:"white",variant:"light",style:{zIndex:1},children:Object(O.jsxs)(b.a,{fluid:!0,children:[Object(O.jsxs)(j.a.Brand,{to:"/",as:u.b,className:"d-flex align-items-center",children:[Object(O.jsx)(f.b.Provider,{value:{className:"text-primary",size:"30",style:{marginRight:"5px"}},children:Object(O.jsx)(p.a,{})}),Object(O.jsx)("b",{children:"Nearest Plane"})]}),Object(O.jsxs)(m.a,{className:"me-auto",defaultActiveKey:window.location.pathname,children:[Object(O.jsx)(m.a.Link,{href:"/",to:"/",as:u.b,children:"Home"}),Object(O.jsx)(m.a.Link,{href:"/nearest",to:"/nearest",as:u.b,children:"Nearest"}),Object(O.jsx)(m.a.Link,{href:"/about",to:"/about",as:u.b,children:"About"})]})]})})}}]),n}(r.a.Component),y=n(77),g=n(46),v=n(49),w=(n(67),function(e){Object(l.a)(n,e);var t=Object(h.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"render",value:function(){var e=Object(v.a)(Array(10).keys()).map((function(e){return Object(O.jsx)(p.a,{className:"plane"},e)}));return Object(O.jsx)("ul",{className:"planeContainer",children:e})}},{key:"componentDidMount",value:function(){var e=this;document.querySelectorAll(".plane").forEach((function(t,n){setTimeout((function(){e.animatePlane(t)}),500*n)}))}},{key:"genPlanePath",value:function(e,t){var n={l:0,r:1,t:2,b:3};if(!(e in n)||!(t in n))throw new Error("initWall and destWall must be one of ['l', 'r', 't', 'b']. Given '".concat(e,"' and '").concat(t,"'"));e===t&&console.warn("genPlanePath: Generating a path between the same wall '".concat(e,"'"));var a={init:n[e],dest:n[t]},r={init:[0,0],dest:[1,1]},s={init:0,dest:30};for(var i in r)a[i]<2?(r[i][0]=a[i]%2?110:0,r[i][1]=s[i]+Math.floor(Math.random()*(100-s[i]))):(r[i][0]=s[i]+Math.floor(Math.random()*(100-s[i])),r[i][1]=a[i]%2?110:0);return r}},{key:"animatePlane",value:function(e){var t=this,n=["l","r","t","b"],a=Math.floor(4*Math.random()),r=(a+1+Math.floor(3*Math.random()))%4,s=this.genPlanePath(n[a],n[r]),i=(s.dest[0]-s.init[0])*window.innerWidth,c=(s.dest[1]-s.init[1])*window.innerHeight,o=Math.floor(180*Math.atan(c/i)/Math.PI);i<0&&(o+=180);var l=function(e){return"".concat(e[0],"vw, ").concat(e[1],"vh")};e.animate([{transform:"translate(".concat(l(s.init),") rotate(").concat(o,"deg)")},{transform:"translate(".concat(l(s.dest),") rotate(").concat(o,"deg)")}],{duration:5e3,iterations:1,composite:"replace"}).onfinish=function(){return t.animatePlane(e)}}}]),n}(r.a.Component)),N=function(e){Object(l.a)(n,e);var t=Object(h.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"render",value:function(){return Object(O.jsxs)(b.a,{fluid:!0,className:"h-100 d-flex align-items-center",children:[Object(O.jsxs)(y.a,{className:"w-100 mx-0",style:{zIndex:1},children:[Object(O.jsxs)(y.a,{className:"align-items-center mx-0",children:[Object(O.jsx)("h4",{className:"text-center fs-1",children:"Welcome to Nearest Plane"}),Object(O.jsx)("p",{className:"w-100 text-center m-auto mb-5 fs-4",children:"Discover the world of airplanes flying right over your head"})]}),Object(O.jsxs)(y.a,{className:"mt-3 mx-0",children:[Object(O.jsx)(u.b,{to:"/nearest",className:"btn btn-primary w-50 m-auto btn-lg text-white",children:"Find your Nearest Plane"}),Object(O.jsxs)(b.a,{fluid:!0,className:"d-flex align-items-center justify-content-center",children:[Object(O.jsx)(f.b.Provider,{value:{className:"fw-light",size:15,style:{marginRight:"3px"}},children:Object(O.jsx)(g.a,{})}),Object(O.jsx)("span",{className:"fw-light fs-6",children:"Location access required"})]})]})]}),Object(O.jsx)(w,{})]})}}]),n}(r.a.Component),k=function(e){Object(l.a)(n,e);var t=Object(h.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"render",value:function(){return Object(O.jsxs)(b.a,{fluid:!0,className:"bg-light",style:{maxWidth:"900px"},children:[Object(O.jsx)("h4",{className:"mt-4",children:"What does Nearest Plane do?"}),Object(O.jsx)("p",{children:"Nearest Plane gives you real-time information about the plane that is closest to your current location."}),Object(O.jsx)("h4",{className:"mt-4",children:"How does Nearest Plane work?"}),Object(O.jsxs)("p",{children:["Nearest Plane uses a combination of your browser's current location and the ",Object(O.jsx)("a",{href:"https://https://opensky-network.org/",children:"OpenSky Network"})," to find the plane that is closest to you at any given moment."]}),Object(O.jsxs)("p",{children:["In more technical terms, the React front-end (that you're looking at right now) sends a request with your location to a Node.js back-end server. That Node.js server then validates the request from the front-end and makes a request to the OpenSky API asking for information about aircraft in your area. Once the Node.js server gets a response back from OpenSky, it packages determines the closest plane to your location, repackages that plane's information, and sends it on to the React front-end where it can be interepreted and displayed for you to enjoy. If you still want to learn more, check out the ",Object(O.jsx)("a",{href:"https://github.com/s-fitch/nearest-plane",children:"Nearest Plane GitHub"}),"."]}),Object(O.jsx)("h4",{className:"mt-4",children:"Who made Nearest Plane?"}),Object(O.jsxs)("p",{children:["I did! If you want to learn more about me, you can check out my website: ",Object(O.jsx)("a",{href:"https://www.spencerfitch.com",children:"spencerfitch.com"}),"."]}),Object(O.jsx)("h4",{className:"mt-4",children:"Why did you make Nearest Plane?"}),Object(O.jsx)("p",{children:"I often found myself looking up at the planes passing by in the sky above my head and wondering what stories they had to tell. My goal in creating Nearest Plane was to provide a quick, intuitive platform for hearing these storiees and learning a little more about the planes that fly above our heads every day."})]})}}]),n}(r.a.Component),P=n(33),C=(n(68),function(e){Object(l.a)(n,e);var t=Object(h.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"render",value:function(){return Object(O.jsx)(b.a,{fluid:!0,className:"h-100 d-flex align-items-center",children:Object(O.jsxs)(y.a,{className:"w-100 mx-0 mb-5",children:[Object(O.jsx)("div",{className:"planePath",children:Object(O.jsx)(p.a,{className:"planeLoading"})}),Object(O.jsx)("h4",{className:"text-center mt-2",children:"Locating nearest plane..."})]})})}}]),n}(r.a.Component)),S=n(36),I=function(e){Object(l.a)(n,e);var t=Object(h.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"render",value:function(){return Object(O.jsxs)(b.a,{fluid:!0,className:"h-100 d-flex flex-column justify-content-center",children:[Object(O.jsxs)(b.a,{fluid:!0,className:"d-flex align-items-center justify-content-center mb-2",children:[Object(O.jsx)(f.b.Provider,{value:{className:"text-primary",size:"40",style:{marginRight:"5px"}},children:Object(O.jsx)(S.a,{})}),Object(O.jsx)("span",{className:"fw-bold fs-4 ",children:"Uh-oh, this is an error"})]}),Object(O.jsx)("p",{className:"text-center",children:this.props.error}),this.props.retry?Object(O.jsx)("a",{href:"/nearest",className:"btn btn-primary text-white w-25 mx-auto",children:"Retry"}):null]})}}]),n}(r.a.Component),M=n(79),W=n(78),z=n(50),T=n(48),L=(r.a.Component,function(e){var t=e.size,n=e.label,a=e.icon,r=e.transform;return Object(O.jsx)("div",{style:{width:t||"1em",height:t||"1em",transform:r||"translate(-50%, -50%)"},children:Object(O.jsx)(M.a,{placement:"right",delay:{show:150,hide:300},overlay:Object(O.jsx)(W.a,{children:n}),children:a})})}),q=function(e){var t=e.size;return Object(O.jsx)(L,{label:"Your Location",icon:Object(O.jsx)(T.a,{className:"text-primary",size:t}),size:t,transform:"translate(-50%, -95%)"})},A=function(e){var t=e.size,n=e.track;return Object(O.jsx)(L,{label:"Nearest Plane",icon:Object(O.jsx)(p.a,{className:"text-primary",size:t,style:{transform:"rotate(".concat(n-90,"deg)")}}),size:t,transform:"translate(-50%, -50%)"})},G={icao24:{label:"ICAO 24",tip:"Unique ICAO 24-bit address of the transponder in hex string representation"},callsign:{label:"Callsign",tip:"Callsign of the vehicle (8 chars)"},squawk:{label:"Squawk",tip:"Assigned by air traffic controllers to identify a vehicle over radio"}},R={origin_country:{label:"Origin Country",tip:"Country name inferred from the ICAO 24-bit address"}},_={longitude:{label:"Longitude (\xb0)",tip:"WGS-84 longitude in degrees"},latitude:{label:"Latitude (\xb0)",tip:"WGS-84 latitude in degrees"}},D={spi:{label:"Special Purpose",tip:"Whether flight status is marked with a special prupose indicator"},sensors:{label:"Sensors",tip:"IDs of receivers which were used to gather vehicle information"},position_source:{label:"Position Source",tip:"System used to determine vehicle's position"}},E=[G,R,_,{on_ground:{label:"On Ground",tip:"Whether the vehicle is currently on the ground"},last_contact:{label:"Last Contact",tip:"Timestamp of last contact from vehicle transponder"}},D],F=[G,R,_,{baro_altitude:{label:"Barometric Altitude (m)",tip:"Determined by measuring surrounding atmospheric pressure"},geo_altitude:{label:"Geometric Altitude (m)",tip:"Determined using specialized electronic equipment like GPS"},vertical_rate:{label:"Vertical Rate (m/s)",tip:"Positive value indicaes that the vehicle is climbing, while a negative value indicates that it is descending"}},{velocity:{label:"Velocity (m/s)",tip:"Velocity relative to the ground"},true_track:{label:"True Track",tip:"Degrees from North of vehicle's current heading"}},{last_contact:{label:"Last Contact",tip:"Timestamp of last contact from vehicle transponder"}},D];function B(e){return Object(O.jsx)("span",{className:"d-inline-flex align-items-center",children:Object(O.jsx)(M.a,{placement:"bottom",delay:{show:250,hide:400},overlay:Object(O.jsx)(W.a,{children:e.tip}),children:Object(O.jsx)("div",{className:"fw-light",children:e.label})})})}r.a.Component,n(70);var H=function(e){Object(l.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(c.a)(this,n),(a=t.call(this,e)).state={lat:null,lng:null,nearest:null,error:null,retryError:!1},a.locationSuccess=a.locationSuccess.bind(Object(P.a)(a)),a}return Object(o.a)(n,[{key:"render",value:function(){return this.state.error?Object(O.jsx)(I,{error:this.state.error,retry:this.state.retryError}):Object(O.jsx)(C,{})}},{key:"componentDidMount",value:function(){this.requestGeolocation()}},{key:"requestGeolocation",value:function(){var e=this;navigator.geolocation?navigator.geolocation.getCurrentPosition(this.locationSuccess,(function(t){console.log(t),e.setState({error:Object(O.jsxs)("span",{children:["We encountered an unexpected error when retreiving your location.",Object(O.jsx)("br",{}),Object(O.jsx)("span",{className:"fw-light",children:"Trying again might fix the issue."})]}),retryError:!0})})):this.setState({error:Object(O.jsxs)("span",{children:["Geolocation is not supported by this browser.",Object(O.jsx)("br",{}),"Please update your browser settings or use a different browser in order to use Nearest Plane."]}),retry:!1})}},{key:"locationSuccess",value:function(e){this.fetchRetry(e,0)}},{key:"fetchRetry",value:function(e,t){var n=this;console.log("Try ".concat(t)),t>=3?this.setState({error:Object(O.jsxs)("span",{children:["We weren't able to retrieve the plane information from our servers.",Object(O.jsx)("br",{}),Object(O.jsx)("span",{className:"fw-light",children:"Trying again might fix the issue."})]}),retryError:!0}):fetch("".concat("https://nearest-plane.herokuapp.com/api","/nearest?lat=").concat(e.coords.latitude,"&lon=").concat(e.coords.longitude)).then((function(e){return e.json()})).then((function(t){n.setState({error:null,lat:e.coords.latitude,lng:e.coords.longitude,nearest:t})})).catch((function(a){return n.fetchRetry(e,t+1)}))}}]),n}(r.a.Component),U=function(e){Object(l.a)(n,e);var t=Object(h.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(o.a)(n,[{key:"render",value:function(){return Object(O.jsxs)(b.a,{fluid:!0,className:"h-100 d-flex flex-column justify-content-center",children:[Object(O.jsxs)(b.a,{fluid:!0,className:"d-flex align-items-center justify-content-center mb-2",children:[Object(O.jsx)(f.b.Provider,{value:{className:"text-primary",size:"40",style:{marginRight:"5px"}},children:Object(O.jsx)(S.a,{})}),Object(O.jsx)("span",{className:"fw-bold fs-4 ",children:"This page isn't what you're looking for."})]}),Object(O.jsxs)("p",{className:"text-center",children:["We can't find \"",window.location.pathname,'" on this website. ',Object(O.jsx)("span",{className:"fw-light",children:"That's all we know."}),Object(O.jsx)("br",{}),"Use the navigation bar above to go to one of our other pages."]})]})}}]),n}(r.a.Component),V=function(e){Object(l.a)(n,e);var t=Object(h.a)(n);function n(e){var a;return Object(c.a)(this,n),(a=t.call(this,e)).state={lat:null,lon:null,nearest:null},a}return Object(o.a)(n,[{key:"render",value:function(){return Object(O.jsx)(u.a,{hashType:"slash",children:Object(O.jsxs)("div",{className:"vh-100 d-flex flex-column bg-light",children:[Object(O.jsx)(x,{}),Object(O.jsxs)(d.c,{children:[Object(O.jsx)(d.a,{exact:!0,path:"/",children:Object(O.jsx)(N,{})}),Object(O.jsx)(d.a,{path:"/nearest",children:Object(O.jsx)(H,{})}),Object(O.jsx)(d.a,{path:"/about",children:Object(O.jsx)(k,{})}),Object(O.jsx)(d.a,{path:"*",children:Object(O.jsx)(U,{})})]})]})})}}]),n}(r.a.Component),J=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,82)).then((function(t){var n=t.getCLS,a=t.getFID,r=t.getFCP,s=t.getLCP,i=t.getTTFB;n(e),a(e),r(e),s(e),i(e)}))};i.a.render(Object(O.jsx)(r.a.StrictMode,{children:Object(O.jsx)(V,{})}),document.getElementById("root")),J()}},[[71,1,2]]]);
//# sourceMappingURL=main.386e52a4.chunk.js.map